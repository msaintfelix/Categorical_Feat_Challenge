import pandas as pd
from sklearn.model_selection import StratifiedKFold

"""
As data is imbalanced, choose StratifiedKFold because its implementation is designed to
generate test sets such that all contain the same distribution of classes, or as close as possible.
"""

if __name__ == "__main__":
    df = pd.read_csv('input/train.csv')

    # shuffle the entire dataframe and initialize new index (other than ID).
    df = df.sample(frac=1).reset_index(drop=True)

    # add kfold column and initialize it with -1's.
    df['val_kfold'] = -1

    # initialize the stratified kfold with 5 splits.
    skf = StratifiedKFold(n_splits=5)

    # update all rows with val_index = fold in the val_kfold column. Lists of rows are generated by split() method.
    for fold, (train_index, val_index) in enumerate(skf.split(X=df, y=df.target.values)):
        print(len(train_index), len(val_index))
        df.loc[val_index, 'val_kfold'] = fold

    df.to_csv('input/train_folds.csv', index=False)